#
# Copyright (c) 2004-2013, Cray Inc.  (See LICENSE file for more details)
#

#
# Makefile.base: Defines general Makefile variables.  Set CHPL_MAKE_HOME
# before using
#

MAKEFLAGS = --no-print-directory

ifndef CHPL_MAKE_HOST_TARGET
CHPL_MAKE_HOST_TARGET = --host
endif

#
# determine what platform we're running on
#
include $(CHPL_MAKE_HOME)/make/Makefile.platform

ifndef CHPL_MAKE_COMPILER
include $(CHPL_MAKE_HOME)/make/Makefile.compiler
endif

ifndef CHPL_MAKE_TASKS
include $(CHPL_MAKE_HOME)/make/Makefile.tasks
endif

ifndef CHPL_MAKE_THREADS
include $(CHPL_MAKE_HOME)/make/Makefile.threads
endif

ifndef CHPL_MAKE_TIMERS
include $(CHPL_MAKE_HOME)/make/Makefile.timers
endif

ifndef CHPL_MAKE_COMM
include $(CHPL_MAKE_HOME)/make/Makefile.comm
endif

ifndef CHPL_MAKE_LAUNCHER
include $(CHPL_MAKE_HOME)/make/Makefile.launcher
endif

ifndef CHPL_MAKE_MEM
include $(CHPL_MAKE_HOME)/make/Makefile.mem
endif

ifndef CHPL_MAKE_ATOMICS
include $(CHPL_MAKE_HOME)/make/Makefile.atomics
endif

ifndef CHPL_MAKE_GMP
include $(CHPL_MAKE_HOME)/make/Makefile.gmp
endif

ifndef CHPL_MAKE_REGEXP
include $(CHPL_MAKE_HOME)/make/Makefile.regexp
endif

ifndef CHPL_MAKE_LLVM
include $(CHPL_MAKE_HOME)/make/Makefile.llvm
endif

#
# default CFLAGS, based on other settings
#
ifeq ($(DEPEND), 1)
CFLAGS += $(DEPEND_CFLAGS)
endif

ifeq ($(DEBUG), 1)
CFLAGS += $(DEBUG_CFLAGS)
endif

ifeq ($(OPTIMIZE), 1)
CFLAGS += $(OPT_CFLAGS)
endif

ifeq ($(PROFILE), 1)
CFLAGS += $(PROFILE_CFLAGS)
LDFLAGS += $(PROFILE_LFLAGS)
endif

#
# Third-party package stuff
#
THIRD_PARTY_DIR = $(CHPL_MAKE_HOME)/third-party

include $(THIRD_PARTY_DIR)/creoleparser/Makefile.include
include $(THIRD_PARTY_DIR)/gasnet/Makefile.include
include $(THIRD_PARTY_DIR)/dlmalloc/Makefile.include
include $(THIRD_PARTY_DIR)/massivethreads/Makefile.include
include $(THIRD_PARTY_DIR)/qthread/Makefile.include
include $(THIRD_PARTY_DIR)/tcmalloc/Makefile.include
include $(THIRD_PARTY_DIR)/gmp/Makefile.include
include $(THIRD_PARTY_DIR)/re2/Makefile.include
include $(THIRD_PARTY_DIR)/llvm/Makefile.include-$(CHPL_MAKE_LLVM)

-include $(THIRD_PARTY_DIR)/Makefile.devel.include

#
# how to make a platform-specific subdirectory
#

default: all

printplatform:
	@echo "for $(CHPL_MAKE_HOST_TARGET)..."
	@echo "CHPL_MAKE_PLATFORM        = $(CHPL_MAKE_PLATFORM)"
	@echo "CHPL_MAKE_HOST_PLATFORM   = $(CHPL_MAKE_HOST_PLATFORM)"
	@echo "CHPL_MAKE_TARGET_PLATFORM = $(CHPL_MAKE_TARGET_PLATFORM)"
	@echo "CHPL_MAKE_COMPILER        = $(CHPL_MAKE_COMPILER)"
	@echo "CHPL_MAKE_THREADS         = $(CHPL_MAKE_THREADS)"
	@echo "CHPL_MAKE_TIMERS          = $(CHPL_MAKE_TIMERS)"
	@echo "CHPL_MAKE_COMM            = $(CHPL_MAKE_COMM)"
	@echo "CHPL_MAKE_COMM_SUBSTRATE  = $(CHPL_MAKE_COMM_SUBSTRATE)"    
	@echo "CHPL_MAKE_LAUNCHER        = $(CHPL_MAKE_LAUNCHER)"
	@echo "CHPL_MAKE_MEM             = $(CHPL_MAKE_MEM)"
	@echo "CHPL_MAKE_ATOMICS         = $(CHPL_MAKE_ATOMICS)"

#
# use: make print-X to print the value of the variable X
#
print-%: ; @echo $* is $($*)

# OBJ_SUBDIR_MADE creates a timestamp file (OBJ_SUBDIR_TIMESTAMP) so
# that the varying time stamps of directories don't cause things to
# rebuild indiscriminately.  OBJ_SUBDIR is the actual directory.
# OBJ_SUBDIR_SAFESLASH is the directory with slashes escaped
# appropriately for use in Makefile command rules.
#
GEN_SUBDIR = gen
PLAT_COMPILER_SUBDIR = $(CHPL_MAKE_HOST_PLATFORM)/$(CHPL_MAKE_COMPILER)
OBJ_SUBDIR = $(GEN_SUBDIR)/$(PLAT_COMPILER_SUBDIR)
OBJ_SUBDIR_TIMESTAMP = $(OBJ_SUBDIR)/.timestamp
OBJ_SUBDIR_MADE = $(OBJ_SUBDIR_TIMESTAMP)
OBJ_SUBDIR_SAFESLASH = $(subst /,\\/, $(OBJ_SUBDIR))

%/.timestamp:
	@echo making $* subdirectory to store platform-specific files
	@mkdir -p $*
	@-touch $*/.timestamp

COMMON_LAYER_SUBDIR = comm-$(CHPL_MAKE_COMM)$(CHPL_MAKE_COMM_EXTRAS)/substrate-$(CHPL_MAKE_COMM_SUBSTRATE)/seg-$(CHPL_MAKE_COMM_SEGMENT)/mem-$(CHPL_MAKE_MEM)
RUNTIME_LAYER_SUBDIR = $(COMMON_LAYER_SUBDIR)/tasks-$(CHPL_MAKE_TASKS)/threads-$(CHPL_MAKE_THREADS)/atomics-$(CHPL_MAKE_ATOMICS)
LAUNCHER_LAYER_SUBDIR = $(COMMON_LAYER_SUBDIR)/launch-$(CHPL_MAKE_LAUNCHER)
TARGET_COMPILER_SUBDIR = $(CHPL_MAKE_TARGET_PLATFORM)/$(CHPL_MAKE_COMPILER)
RT_LN_OBJ_SUBDIR = $(GEN_SUBDIR)/$(TARGET_COMPILER_SUBDIR)
RUNTIME_OBJDIR = $(RT_LN_OBJ_SUBDIR)/$(RUNTIME_LAYER_SUBDIR)
LAUNCHER_OBJDIR = $(RT_LN_OBJ_SUBDIR)/$(LAUNCHER_LAYER_SUBDIR)
LIB_RT_DIR = lib/$(TARGET_COMPILER_SUBDIR)/$(RUNTIME_LAYER_SUBDIR)
LIB_LN_DIR = lib/$(TARGET_COMPILER_SUBDIR)/$(LAUNCHER_LAYER_SUBDIR)


CHPL_BIN_DIR = $(CHPL_MAKE_HOME)/bin/$(CHPL_MAKE_HOST_PLATFORM)
CHPL = $(CHPL_BIN_DIR)/chpl$(EXE_SUFFIX)
CHPLDOC = $(CHPL_BIN_DIR)/chpldoc$(EXE_SUFFIX)


#
# default tools
# 
ifndef CHPL_TAGS_UTIL
ifeq ($(CHPL_EDITOR),vim)
CHPL_TAGS_UTIL = ctags
CHPL_TAGS_FLAGS := -w
CHPL_TAGS_FILE = tags
CHPL_TAGS_APPEND_FLAG = -a
else
CHPL_TAGS_UTIL = etags
CHPL_TAGS_FILE = TAGS
CHPL_TAGS_APPEND_FLAG = -a
endif
endif

# non-portable means to handle flags_list.h as well
#CHPL_TAGS_FLAGS += --regex='/symbolFlag(\s-*\(FLAG[a-zA-Z0-9_]+\)/\1/'


#
# echo to use with the -n option
#
ECHO = echo


#
# by default, no executable suffix
#
EXE_SUFFIX = 


#
# include compiler- and platform-specific settings
#
-include $(CHPL_MAKE_HOME)/make/compiler/Makefile.$(CHPL_MAKE_COMPILER)
-include $(CHPL_MAKE_HOME)/make/platform/Makefile.$(CHPL_MAKE_PLATFORM)
-include $(CHPL_MAKE_HOME)/make/comm/Makefile.$(CHPL_MAKE_COMM)
-include $(CHPL_MAKE_HOME)/make/tasks/Makefile.$(CHPL_MAKE_TASKS)

.SECONDARY: $(OBJ_SUBDIR_TIMESTAMP)
